<?xml version='1.0'?>

<robot name="myrobot" xmlns:xacro="http://www.ros.org/wiki/xacro">


    



<!--links -->
    <!-- <link name="base_footprint" /> -->
    <link name='chassis'>
        <pose>0 0 0.1 0 0 0</pose>
        <inertial>
            <mass value="5.0" />
            <origin xyz="0.0 0 0.1" rpy=" 0 0 0" />
            <inertia
            ixx="0.1" ixy="0" ixz="0"
            iyy="0.1" iyz="0"
            izz="0.1"
            />
        </inertial>
        <collision name='collision'>
            <geometry>
            <box size=".4 .2 .1" />
            </geometry>
        </collision>
        <visual name='chassis_visual'>
            <origin xyz="0 0 0" rpy=" 0 0 0" />
            <geometry>
            <box size=".4 .2 .1" />
            </geometry>
            <material name="blue">
                <color rgba="0.0 0.0 1 1.0" />
            </material>
        </visual>
        <collision name='caster_collision'>
            <origin xyz="-0.15 0 -0.05" rpy=" 0 0 0" />
            <geometry>
                <sphere radius="0.05" />
            </geometry>
        </collision>
        <visual name='caster_visual'>
            <origin xyz="-0.15 0 -0.05" rpy=" 0 0 0" />
            <geometry>
                <sphere radius="0.05" />
            </geometry>
        </visual>
        <collision name='caster_front_collision'>
            <origin xyz="0.15 0 -0.05" rpy=" 0 0 0" />
            <geometry>
                <sphere radius="0.05" />
            </geometry>
        </collision>
        <visual name='caster_front_visual'>
            <origin xyz="0.15 0 -0.05" rpy=" 0 0 0" />
            <geometry>
                <sphere radius="0.05" />
            </geometry>
        </visual>
        
    </link>

    <link name="left_wheel">
        <collision name="collision">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707" />
            <geometry>
                <cylinder radius="0.1" length="0.05" />
            </geometry>
        </collision>
        <visual name="left_wheel_visual">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707" />
            <geometry>
                <cylinder radius="0.1" length="0.05" />
            </geometry>
            <material name="red">
                <color rgba="1 0.0 0.0 1.0" />
            </material>
        </visual>
        <inertial>
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707" />
            <mass value="5" />
            <inertia
            ixx=".1" ixy="0.0" ixz="0.0"
            iyy=".1" iyz="0.0"
            izz=".1" />
        </inertial>
    </link>

    <link name="right_wheel">
        <collision name="collision">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707" />
            <geometry>
                <cylinder radius="0.1" length="0.05" />
            </geometry>
        </collision>
        <visual name="right_wheel_visual">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707" />
            <geometry>
                <cylinder radius="0.1" length="0.05" />
            </geometry>
            <material name="green">
            <color rgba="0.0 1 0.0 1.0" />
            </material>
        </visual>
        <inertial>
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707" />
            <mass value="5" />
            <inertia
            ixx=".1" ixy="0.0" ixz="0.0"
            iyy=".1" iyz="0.0"
            izz=".1" />
        </inertial>
    </link>


<!-- Hokuyo Laser link-->
    <link name="hokuyo_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.1 0.1 0.1" />
            </geometry>
        </collision>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://lab_4/meshes/hokuyo.dae"/>
            </geometry>
        </visual>
        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>


<!--joints -->
    <!-- <joint name="base_footprint_to_base_link" type="fixed">
        <parent link="base_footprint"/>
        <child link="chassis"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint> -->
    <joint type="continuous" name="left_wheel_hinge">
        <origin xyz="0 0.15 0" rpy="0 0 0" />
        <child link="left_wheel" />
        <parent link="chassis" />
        <axis xyz="0 1 0" rpy="0 0 0" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
        <joint type="continuous" name="right_wheel_hinge">
        <origin xyz="0 -0.15 0" rpy="0 0 0" />
        <child link="right_wheel" />
        <parent link="chassis" />
        <axis xyz="0 1 0" rpy="0 0 0" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>

<!-- Hokuyo Laser joint-->

    <joint name="hokuyo_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="0.15 0 0.1" rpy="0 0 0" />
        <parent link="chassis" />
        <child link="hokuyo_link" />
    </joint>


    <!-- hokuyo -->
        <gazebo reference="hokuyo_link">
        <sensor type="ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                    <samples>720</samples>
                    <resolution>1</resolution>
                    <min_angle>0</min_angle>
                    <max_angle>6.283</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>30.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise parameters based on published spec for Hokuyo laser
                    achieving "+-30mm" accuracy at range < 10m. A mean of 0.0m and
                    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                    reading. -->
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>/scan</topicName>
                <frameName>hokuyo_link</frameName>
            </plugin>
        </sensor>
       </gazebo>

    <gazebo>       
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <!-- Plugin update rate in Hz -->
        <updateRate>10</updateRate>
        <!-- Name of left joint, defaults to `left_joint` -->
        <leftJoint>left_wheel_hinge</leftJoint>
        <!-- Name of right joint, defaults to `right_joint` -->
        <rightJoint>right_wheel_hinge</rightJoint>
        <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
        <wheelSeparation>0.4</wheelSeparation>
        <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
        <wheelDiameter>0.2</wheelDiameter>
        <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
        <wheelAcceleration>1.0</wheelAcceleration>
        <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
        <wheelTorque>20</wheelTorque>
        <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
        <commandTopic>turtle1/cmd_vel</commandTopic>
        <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
        <odometryTopic>odom</odometryTopic>
        <!-- Odometry frame, defaults to `odom` -->
        <odometryFrame>odom</odometryFrame>
        <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
        <robotBaseFrame>base_footprint</robotBaseFrame>
        <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
        <odometrySource>1</odometrySource>
        <!-- Set to true to publish transforms for the wheel links, defaults to false -->
        <publishWheelTF>true</publishWheelTF>
        <!-- Set to true to publish transforms for the odometry, defaults to true -->
        <publishOdom>true</publishOdom>
        <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel
        joints, defaults to false -->
        <publishWheelJointState>true</publishWheelJointState>
        <!-- Set to true to swap right and left wheels, defaults to true -->
        <legacyMode>false</legacyMode>
    </plugin>
</gazebo>

</robot>